-- Gui to Lua
-- Version: 3.2

-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local MainUI = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Frame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local Frame_2 = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local Frame_3 = Instance.new("Frame")
local FlyButton = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local NoClipButton = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local EspButton = Instance.new("TextButton")
local UICorner_6 = Instance.new("UICorner")
local TpToolButton = Instance.new("TextButton")
local UICorner_7 = Instance.new("UICorner")
local WalkGUI = Instance.new("TextButton")
local UICorner_8 = Instance.new("UICorner")
local Frame_4 = Instance.new("Frame")
local TextLabel_2 = Instance.new("TextLabel")
local CloeseButton = Instance.new("TextButton")
local TextLabel_3 = Instance.new("TextLabel")
local TextLabel_4 = Instance.new("TextLabel")
local TextLabel_5 = Instance.new("TextLabel")
local TextLabel_6 = Instance.new("TextLabel")
local TextLabel_7 = Instance.new("TextLabel")
local TextLabel_8 = Instance.new("TextLabel")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

MainUI.Name = "MainUI"
MainUI.Parent = ScreenGui
MainUI.BackgroundColor3 = Color3.fromRGB(49, 49, 49)
MainUI.BorderColor3 = Color3.fromRGB(35, 35, 35)
MainUI.BorderSizePixel = 0
MainUI.Position = UDim2.new(0.0768136531, 0, 0.275665402, 0)
MainUI.Size = UDim2.new(0, 292, 0, 275)

UICorner.Parent = MainUI

Frame.Parent = MainUI
Frame.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame.BorderSizePixel = 0
Frame.Size = UDim2.new(0, 292, 0, 33)

UICorner_2.Parent = Frame

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.0479452051, 0, 0.212121218, 0)
TextLabel.Size = UDim2.new(0, 200, 0, 26)
TextLabel.Font = Enum.Font.Unknown
TextLabel.Text = "TznWare Universal Hub"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextSize = 19.000
TextLabel.TextStrokeColor3 = Color3.fromRGB(67, 67, 67)
TextLabel.TextStrokeTransparency = 0.010

Frame_2.Parent = TextLabel
Frame_2.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Frame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_2.BorderSizePixel = 0
Frame_2.Position = UDim2.new(-0.00178085326, 0, 1.22107172, 0)
Frame_2.Size = UDim2.new(0, 258, 0, 221)

UICorner_3.Parent = Frame_2

Frame_3.Parent = TextLabel
Frame_3.BackgroundColor3 = Color3.fromRGB(49, 49, 49)
Frame_3.BorderColor3 = Color3.fromRGB(24, 24, 24)
Frame_3.BorderSizePixel = 0
Frame_3.Position = UDim2.new(0.598219275, 0, 1.22107172, 0)
Frame_3.Size = UDim2.new(0, 8, 0, 226)

FlyButton.Name = "FlyButton"
FlyButton.Parent = Frame
FlyButton.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
FlyButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
FlyButton.BorderSizePixel = 2
FlyButton.Position = UDim2.new(0.267123282, 0, 1.4545455, 0)
FlyButton.Size = UDim2.new(0, 44, 0, 28)
FlyButton.Font = Enum.Font.SourceSans
FlyButton.Text = " "
FlyButton.TextColor3 = Color3.fromRGB(0, 0, 0)
FlyButton.TextSize = 14.000

UICorner_4.Parent = FlyButton
FlyButton.MouseButton1Down:connect(function()
	repeat wait() 
	until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:findFirstChild("Head") and game.Players.LocalPlayer.Character:findFirstChild("Humanoid") 
	local mouse = game.Players.LocalPlayer:GetMouse() 
	repeat wait() until mouse
	local plr = game.Players.LocalPlayer 
	local torso = plr.Character.Head 
	local flying = false
	local deb = true 
	local ctrl = {f = 0, b = 0, l = 0, r = 0} 
	local lastctrl = {f = 0, b = 0, l = 0, r = 0} 
	local maxspeed = 400 
	local speed = 5000 

	function Fly() 
		local bg = Instance.new("BodyGyro", torso) 
		bg.P = 9e4 
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9) 
		bg.cframe = torso.CFrame 
		local bv = Instance.new("BodyVelocity", torso) 
		bv.velocity = Vector3.new(0,0.1,0) 
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9) 
		repeat wait() 
			plr.Character.Humanoid.PlatformStand = true 
			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then 
				speed = speed+.5+(speed/maxspeed) 
				if speed > maxspeed then 
					speed = maxspeed 
				end 
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then 
				speed = speed-1 
				if speed < 0 then 
					speed = 0 
				end 
			end 
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then 
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r} 
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then 
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed 
			else 
				bv.velocity = Vector3.new(0,0.1,0) 
			end 
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0) 
		until not flying 
		ctrl = {f = 0, b = 0, l = 0, r = 0} 
		lastctrl = {f = 0, b = 0, l = 0, r = 0} 
		speed = 0 
		bg:Destroy() 
		bv:Destroy() 
		plr.Character.Humanoid.PlatformStand = false 
	end 
	mouse.KeyDown:connect(function(key) 
		if key:lower() == "g" then 
			if flying then flying = false 
			else 
				flying = true 
				Fly() 
			end 
		elseif key:lower() == "w" then 
			ctrl.f = 1 
		elseif key:lower() == "s" then 
			ctrl.b = -1 
		elseif key:lower() == "a" then 
			ctrl.l = -1 
		elseif key:lower() == "d" then 
			ctrl.r = 1 
		end 
	end) 
	mouse.KeyUp:connect(function(key) 
		if key:lower() == "w" then 
			ctrl.f = 0 
		elseif key:lower() == "s" then 
			ctrl.b = 0 
		elseif key:lower() == "a" then 
			ctrl.l = 0 
		elseif key:lower() == "d" then 
			ctrl.r = 0 
		end 
	end)
	Fly()
end)
end)

NoClipButton.Name = "NoClipButton"
NoClipButton.Parent = Frame
NoClipButton.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
NoClipButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
NoClipButton.BorderSizePixel = 2
NoClipButton.Position = UDim2.new(0.267123282, 0, 2.69696975, 0)
NoClipButton.Size = UDim2.new(0, 44, 0, 28)
NoClipButton.Font = Enum.Font.SourceSans
NoClipButton.Text = " "
NoClipButton.TextColor3 = Color3.fromRGB(0, 0, 0)
NoClipButton.TextSize = 14.000

UICorner_5.Parent = NoClipButton
NoClipButton.MouseButton1Down:connect(function()
	if not StealthMode then
		local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
		print("NOCLIP: Press Q to Activate")
		Indicator = Instance.new("TextLabel", ScreenGui)
		Indicator.AnchorPoint = Vector2.new(0, 1)
		Indicator.Position = UDim2.new(0, 0, 1, 0)
		Indicator.Size = UDim2.new(0, 200, 0, 50)
		Indicator.BackgroundTransparency = 1
		Indicator.TextScaled = true
		Indicator.TextStrokeTransparency = 0
		Indicator.TextColor3 = Color3.new(0, 0, 0)
		Indicator.TextStrokeColor3 = Color3.new(1, 1, 1)
		Indicator.Text = "Noclip: Enabled"
	end

	local noclip = true
	local player = game.Players.LocalPlayer
	local character = player.Character or player.CharacterAdded:Wait()

	local mouse = player:GetMouse()

	mouse.KeyDown:Connect(function(key)
		if key == "q" then
			noclip = not noclip

			if not StealthMode then
				Indicator.Text = "Noclip: " .. (noclip and "Enabled" or "Disabled")
			end
		end
	end)

	while true do
		player = game.Players.LocalPlayer
		character = player.Character

		if noclip then
			for _, v in pairs(character:GetDescendants()) do
				pcall(function()
					if v:IsA("BasePart") then
						v.CanCollide = false
					end
				end)
			end
		end

		game:GetService("RunService").Stepped:wait()
	end
end)
end)

EspButton.Name = "EspButton"
EspButton.Parent = Frame
EspButton.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
EspButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
EspButton.BorderSizePixel = 2
EspButton.Position = UDim2.new(0.267123282, 0, 3.909091, 0)
EspButton.Size = UDim2.new(0, 44, 0, 28)
EspButton.Font = Enum.Font.SourceSans
EspButton.Text = " "
EspButton.TextColor3 = Color3.fromRGB(0, 0, 0)
EspButton.TextSize = 14.000

UICorner_6.Parent = EspButton
EspButton.MouseButton1Down:connect(function()
	local plr = game.Players.LocalPlayer
	local Char = script.Parent
	local UIS = game:GetService("UserInputService")
	local ReplicatedStorage = game:GetService("ReplicatedStorage")
	local boom = Instance.new("Part")

	local Key = 'E'
	local Debounce = true

	UIS.InputBegan:Connect(function(Input, IsTyping)
		if IsTyping then return end
		if Input.KeyCode == Enum.KeyCode[Key] and Debounce then
			Debounce = false
			boom.Shape = "Ball"
			local TweenService = game:GetService("TweenService")

			local Plrs = game:GetService('Players')
			local MyPlr = Plrs.LocalPlayer
			repeat
				wait()
			until MyPlr.Character ~= nil
			local MyChar = MyPlr.Character
			local MyGui = game:GetService('CoreGui')
			local RunS = game:GetService('RunService')
			local Teams = game:GetService('Teams')
			local C = workspace.CurrentCamera
			repeat
				RunS.RenderStepped:wait()
			until C.ViewportSize.X > 0 and C.ViewportSize.Y > 0


			local Settings = {
				KeyCodeToToggle = 285, 
				KeyCodeToScrollRight = 275, 
				KeyCodeToScrollLeft = 276,
				ColorCodes = {
					Enemy = Color3.new(1, 0, 0), 
					Ally = Color3.new(0, 1, 0), 
				},
				ShowTracers = true,
				TracerOptions = {
					ShowEnemies = true, 
					ShowAllies = true,
				},
				ShowESP = true,
				ESPOptions = {
					ShowEnemies = true,
					ShowAllies = true,
					ShowHealth = true,
					ShowName = true,
					ShowDistance = true,
				},
				PlayerESPCrap = {},
				PlayerCrap = {},
				FakeCrap = {},
			}
			local CC = Settings.ColorCodes
			local TO = Settings.TracerOptions
			local ESPO = Settings.ESPOptions
			local PESPC = Settings.PlayerESPCrap
			local PC = Settings.PlayerCrap

			local DONT_IGNORE = {
				"Head",
				"Torso",
				"HumanoidRootPart",
				"Left Arm",
				"Right Arm",
				"Left Leg",
				"Right Leg",
			}

			function CheckNameToDontIgnore(Str)
				for i, v in pairs(DONT_IGNORE) do
					if (Str == v) then
						return true
					end
				end

				return false
			end

			local Called = 0
			function AddShitToIgnoreList(Par)
				Called = Called + 1
				local Hint = Instance.new("Hint", workspace)
				Hint.Text = "Called: " .. Called
				-- Don't judge...
				print("Preparing ESP...")
				print("This could take a while...")
				wait(5)
				local function ScanEverything(Par)
					for i, v in pairs(Par:GetChildren()) do
						if not (CheckNameToDontIgnore(v.Name)) then
							table.insert(Settings.FakeCrap, v)
							print("Added " .. v.Name)
							v.ChildAdded:connect(function(EEEE)
								ScanEverything(EEEE)
							end)
							ScanEverything(v)
						else
							ScanEverything(v)
						end
					end
				end

				local function Scan(Par)
					for i, v in pairs(Par:GetChildren()) do
						if not (Plrs:FindFirstChild(v.Name)) then
							table.insert(Settings.FakeCrap, v)
							print("Added " .. v.Name)
						else
							ScanEverything(v)
						end
						RunS.RenderStepped:wait()
					end
				end
				Scan(Par)
			end

			function RecursiveGetChildren(Par)
				local returnValue = {}

				local rgc
				rgc = function(Par)
					for i, c in next, Par:GetChildren() do
						table.insert(returnValue, c)
						rgc(c)
					end
				end

				rgc(Par)

				return returnValue
			end

			function CheckCameraForPlrModel(Plr)
				local Find = C:FindFirstChild("ESPStuff " .. Plr.Name)
				if (Find) then
					local Find2 = Find:FindFirstChild("Tracer Stuff")
					if not (Find2) then
						local T = Instance.new("Model", Find)
						T.Name = "Tracer Stuff"
					end
					Find2 = Find:FindFirstChild("ESP Stuff")
					if not (Find2) then
						local T = Instance.new("Model", Find)
						T.Name = "ESP Stuff"
					end
					return Find
				end
				local mod = Instance.new("Model", C)
				mod.Name = "ESPStuff " .. Plr.Name
				local T = Instance.new("Model", mod)
				T.Name = "Tracer Stuff"
				local ESP = Instance.new("Model", mod)
				ESP.Name = "ESP Stuff"
				return mod
			end

			function UpdateTracerCrap(What, Plr)
				if ((MyPlr.Character ~= nil and Plr.Character ~= nil) and (MyPlr.Character.PrimaryPart ~= nil and Plr.Character.PrimaryPart ~= nil)) then
					if ((MyPlr.Character.PrimaryPart.Position - Plr.Character.PrimaryPart.Position).magnitude < 2000) then
						local P = What.Part
						P.Transparency = 0
						local M = P.Mesh
						if (Plr.Character == nil) then -- Only if the player character is nil do we wait for it, or updating the tracer would be laggy as fuck
							repeat
								RunS.RenderStepped:wait()
							until Plr.Character ~= nil
						end
						local R = C:ScreenPointToRay(C.ViewportSize.X / 2, C.ViewportSize.Y, 0)
						local Dist = (R.Origin - (Plr.Character.PrimaryPart.Position - Vector3.new(0, 3, 0))).magnitude
						P.Size = Vector3.new(0.1, 0.1, Dist)
						P.CFrame = CFrame.new(R.Origin, (Plr.Character.PrimaryPart.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
						P.BrickColor = BrickColor.new(
							#Teams:GetChildren() > 0 and (
							Plr.TeamColor == MyPlr.TeamColor and CC.Ally or
								Plr.TeamColor ~= MyPlr.TeamColor and CC.Enemy
							) or #Teams:GetChildren() <= 0 and CC.Enemy
						)
						M.Scale = Vector3.new(0.05, 0.05, P.Size.Z / Dist)
					else
						local P = What.Part
						P.Transparency = 1
					end
				end
			end


			local Aim = 1
			function UpdateESPGui(HealthBar, HealthTxt, Plr, DistTxt, PlrName)
				if (Plr.Character == nil) then
					repeat
						RunS.RenderStepped:wait()
					until Plr.Character ~= nil
				end
				if ((Plr.Character.PrimaryPart.Position - MyPlr.Character.PrimaryPart.Position).magnitude <= 2000) then
					HealthBar.Parent.Parent.Visible = true
				else
					HealthBar.Parent.Parent.Visible = false
				end
				HealthBar.Size = UDim2.new(Plr.Character.Humanoid.Health / Plr.Character.Humanoid.MaxHealth, -2, 1, -2)
				HealthTxt.Text = math.floor(Plr.Character.Humanoid.Health) .. "/" .. math.floor(Plr.Character.Humanoid.MaxHealth)
				local Dist = (Plr.Character.PrimaryPart.Position - MyPlr.Character.PrimaryPart.Position).magnitude
				DistTxt.Text = math.floor(Dist) .. " Studs"
				PlrName.TextColor3 = (
					#Teams:GetChildren() > 0 and (
					Plr.TeamColor == MyPlr.TeamColor and CC.Ally or
						Plr.TeamColor ~= MyPlr.TeamColor and CC.Enemy
					) or #Teams:GetChildren() <= 0 and CC.Enemy
				)
				DistTxt.TextColor3 = (
					#Teams:GetChildren() > 0 and (
					Plr.TeamColor == MyPlr.TeamColor and CC.Ally or
						Plr.TeamColor ~= MyPlr.TeamColor and CC.Enemy
					) or #Teams:GetChildren() <= 0 and CC.Enemy
				)
			end

			function UpdateESPCrap(What, Plr)
				if ((MyPlr.Character ~= nil and Plr.Character ~= nil) and (MyPlr.Character.PrimaryPart ~= nil and Plr.Character.PrimaryPart ~= nil)) then
					if ((MyPlr.Character.PrimaryPart.Position - Plr.Character.PrimaryPart.Position).magnitude < 2000) then
						if (PC[Plr] ~= nil) then
							local viewpoint = C.CoordinateFrame

							local PDists = {}
							for i, p in next, PC[Plr] do
								table.insert(PDists, (viewpoint.p - i.Position).magnitude)
							end

							local nearestDistance = math.min(unpack(PDists))
							local furthestDistance = math.max(unpack(PDists))

							for i, p in next, PC[Plr] do
								local O, M, S = unpack(p)


								local Dist = (i.Position - viewpoint.p).magnitude
								local DistMult = Aim + (Dist - nearestDistance) / (furthestDistance - nearestDistance)

								O.Transparency = math.max(S + (i.Transparency * (1 - S)), 0.001)

								local unit = (i.Position - viewpoint.p).unit * DistMult
								local pos = viewpoint.p + unit

								local OF = CFrame.new(pos) * CFrame.Angles(i.CFrame:toEulerAnglesXYZ())

								O.CFrame = OF

								local OS = DistMult / Dist

								if (M == nil) then
									O.Mesh.Scale = i.Size * OS
								else
									if (M:IsA("SpecialMesh") and M.MeshType.Name == "FileMesh") or (M:IsA("SpecialMesh") == false) then
										O[M.Name].Scale = M.Scale * OS
									else
										O[M.Name].Scale = M.Scale * i.Size * OS
									end
								end

								O.BrickColor = BrickColor.new(
									#Teams:GetChildren() > 0 and (
									Plr.TeamColor == MyPlr.TeamColor and CC.Ally or
										Plr.TeamColor ~= MyPlr.TeamColor and CC.Enemy
									) or #Teams:GetChildren() <= 0 and CC.Enemy
								)
							end

							--print("Running")
							local Mouse = MyPlr:GetMouse()
							local R = Ray.new(Mouse.UnitRay.Origin, Mouse.UnitRay.Direction * 5000)
							local RP = workspace:FindPartOnRayWithIgnoreList(R, Settings.FakeCrap, false, true)
							if (RP ~= nil) then
								local Find = Plrs:FindFirstChild(RP.Parent.Name) or Plrs:FindFirstChild(string.sub(RP.Parent.Name, string.len("ESPStuff ") + 1))
								if ((Find and Find:IsA("Player")) and (Find ~= MyPlr and Find == Plr)) then
									Aim = 500000
									wait(3)
								else
									Aim = 1
								end
							else
								Aim = 1
							end
						end
					end
				end
			end

			function CreateESPStuff(Plr)
				local ESPModel = CheckCameraForPlrModel(Plr)
				PESPC[Plr] = ESPModel
				if (Settings.ShowTracers) then
					local T = ESPModel["Tracer Stuff"]
					if not (T:FindFirstChild(Plr.Name)) then
						local mod = Instance.new("Model", T)
						mod.Name = Plr.Name
						local P = Instance.new("Part", mod)
						P.FormFactor = "Custom"
						P.Material = "Neon"
						P.Transparency = 0
						P.Anchored = true
						P.Locked = true
						P.CanCollide = false
						table.insert(Settings.FakeCrap, P)
						local M = Instance.new("BlockMesh", P)
						RunS:BindToRenderStep("TracerUpdate " .. Plr.Name, Enum.RenderPriority.Character.Value - 1, function()
							UpdateTracerCrap(mod, Plr)
						end)
					end
				end
				if (Settings.ShowESP) then
					local ESP = ESPModel["ESP Stuff"]
					local mod = Instance.new("Model", ESP)
					mod.Name = Plr.Name
					repeat
						if (v:IsA("BasePart")) then
						RunS.RenderStepped:wait()
					until Plr.Character ~= nil
					for i, v in next, RecursiveGetChildren(Plr.Character) do
							local O = Instance.new("Part", mod)
							O.Anchored = true
							O.CanCollide = false
							O.FormFactor = "Custom"
							O.Size = Vector3.new(1, 1, 1)
							O.Name = "Fake " .. v.Name
							O.Material = "SmoothPlastic"
							O.TopSurface = "SmoothNoOutlines"
							O.BottomSurface = "SmoothNoOutlines"
							O.FrontSurface = "SmoothNoOutlines"
							O.BackSurface = "SmoothNoOutlines"
							O.LeftSurface = "SmoothNoOutlines"
							O.RightSurface = "SmoothNoOutlines"

							local P = nil
							local PMesh = nil
							for ii, vv in next, RecursiveGetChildren(v) do
								if (vv:IsA("DataModelMesh")) then
									local ThisPMesh = vv:clone()

									local meshChanged = vv.Changed:connect(function(Prop)
										if (Prop == "MeshType" or Prop == "MeshId" or Prop == "TextureProp") then
											ThisPMesh[Prop] = vv[Prop]
										end
									end)

									PMesh = ThisPMesh
								elseif (vv:IsA("FaceInstance")) then
									vv:clone().Parent = O
								end
							end

							if (PMesh == nil) then
								local M = Instance.new("BlockMesh", O)
							else
								PMesh:clone().Parent = O
							end

							if (O.Name == "Fake Head") then
								local Info = Instance.new("BillboardGui", O.Mesh)
								Info.Name = "ESPStats"
								Info.Adornee = O
								Info.Size = UDim2.new(0, 100, 0, 75)
								Info.ExtentsOffset = Vector3.new(0, 0.3, 0)

								local Stats = Instance.new("Frame", Info)
								Stats.BackgroundTransparency = 1
								Stats.Name = "Stats"
								Stats.Size = UDim2.new(1, 0, 1, 0)
								Stats.Visible = false

								local Health = Instance.new("Frame", Stats)
								Health.Name = "HealthBG"
								Health.BackgroundColor3 = Color3.new(0, 0, 0)
								Health.BorderSizePixel = 0
								Health.Position = UDim2.new(0, 0, 0, 25)
								Health.Size = UDim2.new(1, 0, 0, 25)

								local HealthBG = Instance.new("Frame", Health)
								HealthBG.Name = "Health"
								HealthBG.BackgroundColor3 = Color3.new(0, 1, 0)
								HealthBG.BorderSizePixel = 0
								HealthBG.Position = UDim2.new(0, 1, 0, 1)
								HealthBG.Size = UDim2.new(1, -2, 1, -2)

								local HealthNum = Instance.new("TextLabel", Health)
								HealthNum.Name = "HealthNum"
								HealthNum.BackgroundTransparency = 1
								HealthNum.Size = UDim2.new(1, 0, 1, 0)
								HealthNum.Font = "Legacy"
								HealthNum.FontSize = "Size8"
								HealthNum.Text = "???"
								HealthNum.TextColor3 = Color3.new(1, 0, 0)

								local PlrName = Instance.new("TextLabel", Stats)
								PlrName.Name = "PlrName"
								PlrName.BackgroundTransparency = 1
								PlrName.Size = UDim2.new(1, 0, 0, 25)
								PlrName.Font = "Legacy"
								PlrName.FontSize = "Size8"
								PlrName.Text = Plr.Name
								PlrName.TextColor3 = (
									#Teams:GetChildren() > 0 and (
									Plr.TeamColor == MyPlr.TeamColor and CC.Ally or
										Plr.TeamColor ~= MyPlr.TeamColor and CC.Enemy
									) or #Teams:GetChildren() <= 0 and CC.Enemy
								)

								local PlrDist = PlrName:clone()
								PlrDist.Parent = PlrName.Parent
								PlrDist.Name = "Dist"
								PlrDist.Text = "???"
								PlrDist.Position = UDim2.new(0, 0, 0, 50)
								PlrDist.TextColor3 = (
									#Teams:GetChildren() > 0 and (
									Plr.TeamColor == MyPlr.TeamColor and CC.Ally or
										Plr.TeamColor ~= MyPlr.TeamColor and CC.Enemy
									) or #Teams:GetChildren() <= 0 and CC.Enemy
								)
								RunS:BindToRenderStep("UpdateESPGui " .. Plr.Name, Enum.RenderPriority.Character.Value - 1, function()
									UpdateESPGui(HealthBG, HealthNum, Plr, PlrDist, PlrName)
								end)
							end

							if (PC[Plr] == nil) then
								PC[Plr] = {}
							end
							PC[Plr][v] = {O, PMesh, 0}
							table.insert(Settings.FakeCrap, O)
							table.insert(Settings.FakeCrap, PMesh)
						end
					end
					RunS:BindToRenderStep("UpdateESP " .. Plr.Name, Enum.RenderPriority.Character.Value - 1, function()
						UpdateESPCrap(mod, Plr)
					end)
				end
			end

			function RemoveESP(Plr)
				RunS:UnbindFromRenderStep("UpdateESP " .. Plr.Name)
				RunS:UnbindFromRenderStep("UpdateESPGui " .. Plr.Name)
				local Find = C:FindFirstChild("ESPStuff " .. Plr.Name)
				if (Find) then
					Find = Find:FindFirstChild("ESP Stuff")
					if (Find) then
						Find:Destroy()
					end
				end
				PC[Plr] = {}
			end

			function OnCharacterAdded(Char, Plr)
				RemoveESP(Plr)
				CreateESPStuff(Plr)
				-- Added shit to ingore list
			end

			function OnPlayerAdded(Plr)
				CreateESPStuff(Plr)
				Plr.CharacterAdded:connect(function(Char)
					OnCharacterAdded(Char, Plr)
				end)
			end

			function OnPlayerRemoved(Plr)
				RunS:UnbindFromRenderStep("TracerUpdate " .. Plr.Name)
				RunS:UnbindFromRenderStep("UpdateESP " .. Plr.Name)
				RunS:UnbindFromRenderStep("UpdateESPGui " .. Plr.Name)
				local Find = C:FindFirstChild("ESPStuff " .. Plr.Name)
				if (Find) then
					Find:Destroy()
				end
			end

			function GetCurrentPlayers()
				for i, v in pairs(Plrs:GetPlayers()) do
					if (v ~= MyPlr) then
						CreateESPStuff(v)
						v.CharacterAdded:connect(function(Char)
							OnCharacterAdded(Char, v)
						end)
					end
				end
			end

			print("Please wait....")
			wait(0.5)
			AddShitToIgnoreList(workspace)
			GetCurrentPlayers()
			Plrs.PlayerAdded:connect(OnPlayerAdded)
			Plrs.PlayerRemoving:connect(OnPlayerRemoved)
		end
	end)
end)
end)

TpToolButton.Name = "TpToolButton"
TpToolButton.Parent = Frame
TpToolButton.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
TpToolButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TpToolButton.BorderSizePixel = 2
TpToolButton.Position = UDim2.new(0.267123282, 0, 5.060606, 0)
TpToolButton.Size = UDim2.new(0, 44, 0, 28)
TpToolButton.Font = Enum.Font.SourceSans
TpToolButton.Text = " "
TpToolButton.TextColor3 = Color3.fromRGB(0, 0, 0)
TpToolButton.TextSize = 14.000

UICorner_7.Parent = TpToolButton
TpToolButton.MouseButton1Down:connect(function()
	mouse = game.Players.LocalPlayer:GetMouse()
	tool = Instance.new("Tool")
	tool.RequiresHandle = false
	tool.Name = "Cloud TP Tool"
	tool.Activated:connect(function()
		local pos = mouse.Hit+Vector3.new(0,2.5,0)
		pos = CFrame.new(pos.X,pos.Y,pos.Z)
		game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = pos
	end)
	tool.Parent = game.Players.LocalPlayer.Backpack
end)
end)

WalkGUI.Name = "WalkGUI"
WalkGUI.Parent = Frame
WalkGUI.BackgroundColor3 = Color3.fromRGB(63, 63, 63)
WalkGUI.BorderColor3 = Color3.fromRGB(0, 0, 0)
WalkGUI.BorderSizePixel = 2
WalkGUI.Position = UDim2.new(0.267123282, 0, 6.21212101, 0)
WalkGUI.Size = UDim2.new(0, 44, 0, 28)
WalkGUI.Font = Enum.Font.SourceSans
WalkGUI.Text = " "
WalkGUI.TextColor3 = Color3.fromRGB(0, 0, 0)
WalkGUI.TextSize = 14.000

UICorner_8.Parent = WalkGUI
WalkGUI.MouseButton1Down:connect(function()
	_G.HackedWalkSpeed = 150

	local Plrs = game:GetService("Players")

	local MyPlr = Plrs.LocalPlayer
	local MyChar = MyPlr.Character

	if MyChar then
		local Hum = MyChar.Humanoid
		Hum.Changed:connect(function()
			Hum.WalkSpeed = _G.HackedWalkSpeed
		end)
		Hum.WalkSpeed = _G.HackedWalkSpeed
	end


	MyPlr.CharacterAdded:connect(function(Char)
		MyChar = Char
		repeat wait() until Char:FindFirstChild("Humanoid")
		local Hum = Char.Humanoid
		Hum.Changed:connect(function()
			Hum.WalkSpeed = _G.HackedWalkSpeed
		end)
		Hum.WalkSpeed = _G.HackedWalkSpeed
	end)
end)
end)

Frame_4.Parent = MainUI
Frame_4.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
Frame_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
Frame_4.BorderSizePixel = 0
Frame_4.Position = UDim2.new(0.00342465751, 0, 0.11272727, 0)
Frame_4.Size = UDim2.new(0, 291, 0, 5)

TextLabel_2.Parent = MainUI
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.BorderSizePixel = 0
TextLabel_2.Position = UDim2.new(0.00342465751, 0, 0.159083143, 0)
TextLabel_2.Size = UDim2.new(0, 77, 0, 35)
TextLabel_2.Font = Enum.Font.ArialBold
TextLabel_2.Text = "Fly (G)"
TextLabel_2.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_2.TextSize = 13.000

CloeseButton.Name = "Cloese Button"
CloeseButton.Parent = MainUI
CloeseButton.BackgroundColor3 = Color3.fromRGB(0, 38, 255)
CloeseButton.BackgroundTransparency = 1.000
CloeseButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
CloeseButton.BorderSizePixel = 0
CloeseButton.Position = UDim2.new(0.85320574, 0, 0.0387010612, 0)
CloeseButton.Size = UDim2.new(0, 41, 0, 17)
CloeseButton.Font = Enum.Font.ArialBold
CloeseButton.Text = "X"
CloeseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloeseButton.TextScaled = true
CloeseButton.TextSize = 1.000
CloeseButton.TextStrokeColor3 = Color3.fromRGB(56, 56, 56)
CloeseButton.TextStrokeTransparency = 0.000
CloeseButton.TextWrapped = true

TextLabel_3.Parent = MainUI
TextLabel_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_3.BackgroundTransparency = 1.000
TextLabel_3.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.BorderSizePixel = 0
TextLabel_3.Position = UDim2.new(0.00342465751, 0, 0.300901324, 0)
TextLabel_3.Size = UDim2.new(0, 77, 0, 35)
TextLabel_3.Font = Enum.Font.ArialBold
TextLabel_3.Text = "NoClip"
TextLabel_3.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_3.TextSize = 13.000

TextLabel_4.Parent = MainUI
TextLabel_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_4.BackgroundTransparency = 1.000
TextLabel_4.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.BorderSizePixel = 0
TextLabel_4.Position = UDim2.new(0, 0, 0.442719519, 0)
TextLabel_4.Size = UDim2.new(0, 77, 0, 35)
TextLabel_4.Font = Enum.Font.ArialBold
TextLabel_4.Text = "ESP"
TextLabel_4.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_4.TextSize = 13.000

TextLabel_5.Parent = MainUI
TextLabel_5.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_5.BackgroundTransparency = 1.000
TextLabel_5.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.BorderSizePixel = 0
TextLabel_5.Position = UDim2.new(0.00342465751, 0, 0.580901325, 0)
TextLabel_5.Size = UDim2.new(0, 77, 0, 35)
TextLabel_5.Font = Enum.Font.ArialBold
TextLabel_5.Text = "TP.TOOL"
TextLabel_5.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_5.TextSize = 12.000

TextLabel_6.Parent = MainUI
TextLabel_6.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_6.BackgroundTransparency = 1.000
TextLabel_6.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.BorderSizePixel = 0
TextLabel_6.Position = UDim2.new(0.0239726026, 0, 0.744537711, 0)
TextLabel_6.Size = UDim2.new(0, 77, 0, 35)
TextLabel_6.Font = Enum.Font.ArialBold
TextLabel_6.Text = "WalkSpeed"
TextLabel_6.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_6.TextSize = 12.000

TextLabel_7.Parent = MainUI
TextLabel_7.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_7.BackgroundTransparency = 1.000
TextLabel_7.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_7.BorderSizePixel = 0
TextLabel_7.Position = UDim2.new(0.589041114, 0, 0.362719506, 0)
TextLabel_7.Size = UDim2.new(0, 77, 0, 35)
TextLabel_7.Font = Enum.Font.ArialBold
TextLabel_7.Text = "More coming soon!"
TextLabel_7.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_7.TextSize = 12.000

TextLabel_8.Parent = MainUI
TextLabel_8.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_8.BackgroundTransparency = 1.000
TextLabel_8.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_8.BorderSizePixel = 0
TextLabel_8.Position = UDim2.new(0.589041114, 0, 0.424537688, 0)
TextLabel_8.Size = UDim2.new(0, 77, 0, 35)
TextLabel_8.Font = Enum.Font.ArialBold
TextLabel_8.Text = ".gg/4gmE7nmrBQ"
TextLabel_8.TextColor3 = Color3.fromRGB(0, 0, 0)
TextLabel_8.TextSize = 12.000

-- Scripts:

local function JPVZLL_fake_script() -- CloeseButton.Cloese Script 
	local script = Instance.new('LocalScript', CloeseButton)

	local MainUI = script.Parent.Parent -- Change Scrolling frame to the name of the Scrolling frame if you changed the Name.
	
	script.Parent.MouseButton1Click:Connect(function()
		MainUI.Visible = false  -- Change Scrolling frame to the name of the Scrolling frame if you changed the Name.
	end)
	
end
coroutine.wrap(JPVZLL_fake_script)()
local function YBXH_fake_script() -- ScreenGui.Script 
	local script = Instance.new('Script', ScreenGui)

	frame = script.Parent.MainUI -- Take out {}s, and put name of frame
	frame.Draggable = true
	frame.Active = true
	frame.Selectable = true
end
coroutine.wrap(YBXH_fake_script)()
